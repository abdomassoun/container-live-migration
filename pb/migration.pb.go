// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: migration.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sent by the target node to request a pod checkpoint
type CheckpointRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                              // e.g., "default"
	PodName       string                 `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`                   // e.g., "nginx-pod"
	ContainerName string                 `protobuf:"bytes,3,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"` // e.g., "nginx"
	K8SToken      string                 `protobuf:"bytes,4,opt,name=k8s_token,json=k8sToken,proto3" json:"k8s_token,omitempty"`                // Kubelet token for auth
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckpointRequest) Reset() {
	*x = CheckpointRequest{}
	mi := &file_migration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointRequest) ProtoMessage() {}

func (x *CheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointRequest.ProtoReflect.Descriptor instead.
func (*CheckpointRequest) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{0}
}

func (x *CheckpointRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CheckpointRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *CheckpointRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *CheckpointRequest) GetK8SToken() string {
	if x != nil {
		return x.K8SToken
	}
	return ""
}

// Returned from the controller with checkpoint path
type CheckpointResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CheckpointTarPath string                 `protobuf:"bytes,1,opt,name=checkpoint_tar_path,json=checkpointTarPath,proto3" json:"checkpoint_tar_path,omitempty"` // e.g., /mnt/nfs/checkpoints/...
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                                                // Optional message
	Success           bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`                                               // Success flag
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CheckpointResponse) Reset() {
	*x = CheckpointResponse{}
	mi := &file_migration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointResponse) ProtoMessage() {}

func (x *CheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointResponse.ProtoReflect.Descriptor instead.
func (*CheckpointResponse) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{1}
}

func (x *CheckpointResponse) GetCheckpointTarPath() string {
	if x != nil {
		return x.CheckpointTarPath
	}
	return ""
}

func (x *CheckpointResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckpointResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Sent by target node after successfully building container image
type ImageBuiltNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageName     string                 `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`          // e.g., nginx-restored
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                           // e.g., "default"
	PodName       string                 `protobuf:"bytes,3,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`                // e.g., "nginx-pod"
	YamlManifest  string                 `protobuf:"bytes,4,opt,name=yaml_manifest,json=yamlManifest,proto3" json:"yaml_manifest,omitempty"` // (optional) contents of new pod YAML
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageBuiltNotification) Reset() {
	*x = ImageBuiltNotification{}
	mi := &file_migration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageBuiltNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageBuiltNotification) ProtoMessage() {}

func (x *ImageBuiltNotification) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageBuiltNotification.ProtoReflect.Descriptor instead.
func (*ImageBuiltNotification) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{2}
}

func (x *ImageBuiltNotification) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ImageBuiltNotification) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageBuiltNotification) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ImageBuiltNotification) GetYamlManifest() string {
	if x != nil {
		return x.YamlManifest
	}
	return ""
}

// Acknowledgement response
type MigrationAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MigrationAck) Reset() {
	*x = MigrationAck{}
	mi := &file_migration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrationAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationAck) ProtoMessage() {}

func (x *MigrationAck) ProtoReflect() protoreflect.Message {
	mi := &file_migration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationAck.ProtoReflect.Descriptor instead.
func (*MigrationAck) Descriptor() ([]byte, []int) {
	return file_migration_proto_rawDescGZIP(), []int{3}
}

func (x *MigrationAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MigrationAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_migration_proto protoreflect.FileDescriptor

const file_migration_proto_rawDesc = "" +
	"\n" +
	"\x0fmigration.proto\x12\tmigration\"\x90\x01\n" +
	"\x11CheckpointRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x19\n" +
	"\bpod_name\x18\x02 \x01(\tR\apodName\x12%\n" +
	"\x0econtainer_name\x18\x03 \x01(\tR\rcontainerName\x12\x1b\n" +
	"\tk8s_token\x18\x04 \x01(\tR\bk8sToken\"x\n" +
	"\x12CheckpointResponse\x12.\n" +
	"\x13checkpoint_tar_path\x18\x01 \x01(\tR\x11checkpointTarPath\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\"\x95\x01\n" +
	"\x16ImageBuiltNotification\x12\x1d\n" +
	"\n" +
	"image_name\x18\x01 \x01(\tR\timageName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x19\n" +
	"\bpod_name\x18\x03 \x01(\tR\apodName\x12#\n" +
	"\ryaml_manifest\x18\x04 \x01(\tR\fyamlManifest\"B\n" +
	"\fMigrationAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xb4\x01\n" +
	"\x10MigrationService\x12P\n" +
	"\x11RequestCheckpoint\x12\x1c.migration.CheckpointRequest\x1a\x1d.migration.CheckpointResponse\x12N\n" +
	"\x10NotifyImageBuilt\x12!.migration.ImageBuiltNotification\x1a\x17.migration.MigrationAckB4Z2github.com/abdomassoun/container-live-migration/pbb\x06proto3"

var (
	file_migration_proto_rawDescOnce sync.Once
	file_migration_proto_rawDescData []byte
)

func file_migration_proto_rawDescGZIP() []byte {
	file_migration_proto_rawDescOnce.Do(func() {
		file_migration_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_migration_proto_rawDesc), len(file_migration_proto_rawDesc)))
	})
	return file_migration_proto_rawDescData
}

var file_migration_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_migration_proto_goTypes = []any{
	(*CheckpointRequest)(nil),      // 0: migration.CheckpointRequest
	(*CheckpointResponse)(nil),     // 1: migration.CheckpointResponse
	(*ImageBuiltNotification)(nil), // 2: migration.ImageBuiltNotification
	(*MigrationAck)(nil),           // 3: migration.MigrationAck
}
var file_migration_proto_depIdxs = []int32{
	0, // 0: migration.MigrationService.RequestCheckpoint:input_type -> migration.CheckpointRequest
	2, // 1: migration.MigrationService.NotifyImageBuilt:input_type -> migration.ImageBuiltNotification
	1, // 2: migration.MigrationService.RequestCheckpoint:output_type -> migration.CheckpointResponse
	3, // 3: migration.MigrationService.NotifyImageBuilt:output_type -> migration.MigrationAck
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_migration_proto_init() }
func file_migration_proto_init() {
	if File_migration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_migration_proto_rawDesc), len(file_migration_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_migration_proto_goTypes,
		DependencyIndexes: file_migration_proto_depIdxs,
		MessageInfos:      file_migration_proto_msgTypes,
	}.Build()
	File_migration_proto = out.File
	file_migration_proto_goTypes = nil
	file_migration_proto_depIdxs = nil
}
